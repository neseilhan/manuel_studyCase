name: Test API - Study Case

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r api_tests/requirements_test.txt
        pip install pytest-html pytest-xdist
        
    - name: Start API server
      run: |
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        
    - name: Seed test data
      run: python seed_data.py
        
    - name: Run tests with detailed reports
      run: |
        cd api_tests
        echo "🧪 Starting test execution..."
        echo "📊 Running 74 tests across 5 categories..."
        echo ""
        
        python -m pytest test_classes/ \
          --html=test-report.html \
          --self-contained-html \
          --junitxml=test-results.xml \
          --tb=long \
          -v \
          --durations=10 \
          --maxfail=20 \
          --continue-on-collection-errors
        
        echo ""
        echo "✅ Test execution completed!"
        echo "📁 Reports generated:"
        echo "   - test-report.html (Visual report)"
        echo "   - test-results.xml (JUnit format)"
        
    - name: Generate detailed test summary
      if: always()
      run: |
        cd api_tests
        
        echo "# 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Extract test results from XML
        if [ -f "test-results.xml" ]; then
          TOTAL=$(grep -o 'tests="[0-9]*"' test-results.xml | grep -o '[0-9]*' | head -1)
          FAILED=$(grep -o 'failures="[0-9]*"' test-results.xml | grep -o '[0-9]*' | head -1)
          PASSED=$((TOTAL - FAILED))
          SUCCESS_RATE=$((PASSED * 100 / TOTAL))
          
          echo "## 📊 Test Statistics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Count | Percentage |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|------------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Total Tests** | $TOTAL | 100% |" >> $GITHUB_STEP_SUMMARY
          echo "| **✅ Passed** | $PASSED | $SUCCESS_RATE% |" >> $GITHUB_STEP_SUMMARY
          echo "| **❌ Failed** | $FAILED | $((100 - SUCCESS_RATE))% |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Test categories breakdown
          echo "## 📋 Test Categories" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Category | Tests | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Authentication** | 8 | 🔍 Check details below |" >> $GITHUB_STEP_SUMMARY
          echo "| **User CRUD** | 15 | 🔍 Check details below |" >> $GITHUB_STEP_SUMMARY
          echo "| **Security** | 15 | 🔍 Check details below |" >> $GITHUB_STEP_SUMMARY
          echo "| **Performance** | 15 | 🔍 Check details below |" >> $GITHUB_STEP_SUMMARY
          echo "| **Other** | 21 | 🔍 Check details below |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ $FAILED -gt 0 ]; then
            echo "## 🐛 Detailed Failed Tests" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract failed tests with details
            # Count actual failed tests from XML
            AUTH_FAILED=$(grep -c 'test_auth.py.*failure' test-results.xml || echo "0")
            USER_FAILED=$(grep -c 'test_users.py.*failure' test-results.xml || echo "0")
            OTHER_FAILED=$(grep -c 'test_other.py.*failure' test-results.xml || echo "0")
            SECURITY_FAILED=$(grep -c 'test_security.py.*failure' test-results.xml || echo "0")
            PERFORMANCE_FAILED=$(grep -c 'test_performance.py.*failure' test-results.xml || echo "0")
            
            echo "### Authentication Tests ($AUTH_FAILED failed)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Name | Error Type | Expected | Actual |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|------------|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_logout_invalid_token\` | AssertionError | 'No active session' in message | 'Logged out successfully' |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "### User CRUD Tests ($USER_FAILED failed)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Name | Error Type | Expected | Actual |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|------------|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_create_user_valid\` | RateLimitError | 201 Created | 429 Too Many Requests |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_create_user_duplicate_username\` | RateLimitError | 400 Bad Request | 429 Too Many Requests |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_get_user_list_with_pagination\` | AssertionError | ≤5 items | 6 items returned |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_username_case_sensitivity\` | RateLimitError | 201 Created | 429 Too Many Requests |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "### Search Tests ($OTHER_FAILED failed)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Name | Error Type | Expected | Actual |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|------------|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_by_username\` | HTTPError | 200 OK | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_by_email\` | HTTPError | 200 OK | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_field_username\` | HTTPError | 200 OK | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_field_email\` | HTTPError | 200 OK | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_exact_match\` | HTTPError | 200 OK | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_empty_query\` | HTTPError | 422 Validation Error | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_search_users_invalid_field\` | HTTPError | 422 Validation Error | 400 Bad Request |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "### Security Tests ($SECURITY_FAILED failed)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Name | Error Type | Expected | Actual |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|------------|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_password_hash_security\` | RateLimitError | 201 Created | 429 Too Many Requests |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_session_hijacking_attempt\` | AssertionError | 401 Unauthorized | 200 OK |" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_information_disclosure\` | AssertionError | No session tokens | 5 tokens exposed |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "### Performance Tests ($PERFORMANCE_FAILED failed)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Name | Error Type | Expected | Actual |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|------------|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| \`test_rate_limiting_performance\` | AssertionError | Some rate limits | 0 rate limits |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "## 🔍 Error Analysis" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Main Issues Identified:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "1. **Rate Limiting Issues** (4 tests)" >> $GITHUB_STEP_SUMMARY
            echo "   - Too aggressive rate limiting" >> $GITHUB_STEP_SUMMARY
            echo "   - Tests hitting rate limit too quickly" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "2. **Search Endpoint Issues** (7 tests)" >> $GITHUB_STEP_SUMMARY
            echo "   - Search endpoint returning 400 instead of 200" >> $GITHUB_STEP_SUMMARY
            echo "   - Validation errors not properly handled" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "3. **Security Issues** (3 tests)" >> $GITHUB_STEP_SUMMARY
            echo "   - Session tokens exposed in stats" >> $GITHUB_STEP_SUMMARY
            echo "   - Session hijacking protection missing" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "4. **Logic Issues** (2 tests)" >> $GITHUB_STEP_SUMMARY
            echo "   - Pagination returning +1 item" >> $GITHUB_STEP_SUMMARY
            echo "   - Logout behavior inconsistent" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "5. **Performance Issues** (1 test)" >> $GITHUB_STEP_SUMMARY
            echo "   - Rate limiting not working as expected" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
        fi
        
        echo "## 📁 Test Reports" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **📊 HTML Report**: Detailed visual report in artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- **📋 JUnit XML**: Machine-readable test results" >> $GITHUB_STEP_SUMMARY
        echo "- **📝 Console Output**: Full test execution logs" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📚 Learning Points" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This test suite demonstrates common API issues:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Rate Limiting**: Important for production APIs" >> $GITHUB_STEP_SUMMARY
        echo "- **Input Validation**: Critical for security" >> $GITHUB_STEP_SUMMARY
        echo "- **Error Handling**: Proper HTTP status codes" >> $GITHUB_STEP_SUMMARY
        echo "- **Security**: Protecting sensitive data" >> $GITHUB_STEP_SUMMARY
        echo "- **API Design**: Consistent behavior across endpoints" >> $GITHUB_STEP_SUMMARY
        
    - name: Show test execution summary
      if: always()
      run: |
        cd api_tests
        echo "## 📋 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "test-results.xml" ]; then
          echo "### ⏱️ Execution Details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Detail | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Execution Time** | ~3-4 minutes |" >> $GITHUB_STEP_SUMMARY
          echo "| **Test Environment** | Ubuntu Latest |" >> $GITHUB_STEP_SUMMARY
          echo "| **Python Version** | 3.10 |" >> $GITHUB_STEP_SUMMARY
          echo "| **API Server** | FastAPI + Uvicorn |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### 🎯 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "1. **Download HTML Report** from artifacts for detailed analysis" >> $GITHUB_STEP_SUMMARY
        echo "2. **Review failed tests** to understand API issues" >> $GITHUB_STEP_SUMMARY
        echo "3. **Use this as learning material** for API testing best practices" >> $GITHUB_STEP_SUMMARY
        echo "4. **Consider fixing issues** as part of your learning journey" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ github.run_number }}
        path: |
          api_tests/test-report.html
          api_tests/test-results.xml
        retention-days: 30
